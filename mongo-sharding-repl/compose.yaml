version: '3'
name: mongo-sharding-repl
services:

  # сервер конфигурации
  mongo_configSrv:
    image: mongo:latest 
    container_name: mongo_configSrv
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_config-data:/data/db
    command:
      [
        "--configsvr",
        "--replSet",
        "mongo_configSrv",
        "--bind_ip_all",
        "--port",
        "27017"
      ] 
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')", "--quiet" ]
      interval: 5s
      start_period: 0s

  # 1-й шард, 1-ая реплика
  mongo_shard1_1:
    image: mongo:latest
    container_name: mongo_shard1_1
    restart: always
    ports:
      - "27018:27018"
    volumes:
      - mongo_shard1_1-data:/data/db
    depends_on:
      - mongo_configSrv
    links:
      - mongo_shard1_2
      - mongo_shard1_3
    command:
      [
        "--shardsvr", 
        "--replSet",
        "rs_mongo_shard1", 
        "--bind_ip_all", 
        "--port",
        "27018"
      ]
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')", "--quiet" ]
      interval: 5s
      start_period: 0s
    
  # 1-й шард, 2-ая реплика
  mongo_shard1_2:
    image: mongo:latest
    container_name: mongo_shard1_2
    restart: always
    ports:
      - "27021:27021"
    volumes:
      - mongo_shard1_2-data:/data/db
    depends_on:
      - mongo_configSrv
    command:
      [
        "--shardsvr", 
        "--replSet",
        "rs_mongo_shard1", 
        "--bind_ip_all", 
        "--port",
        "27021"
      ]
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')", "--quiet" ]
      interval: 5s
      start_period: 0s
      
  # 1-й шард, 3-ая реплика
  mongo_shard1_3:
    image: mongo:latest
    container_name: mongo_shard1_3
    restart: always
    ports:
      - "27022:27022"
    volumes:
      - mongo_shard1_3-data:/data/db
    depends_on:
      - mongo_configSrv
    command:
      [
        "--shardsvr", 
        "--replSet",
        "rs_mongo_shard1", 
        "--bind_ip_all", 
        "--port",
        "27022"
      ]
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')", "--quiet" ]
      interval: 5s
      start_period: 0s

  # 2-й шард, 1-ая реплика
  mongo_shard2_1:
    image: mongo:latest
    container_name: mongo_shard2_1
    restart: always
    ports:
      - "27019:27019"
    volumes:
      - mongo_shard2_1-data:/data/db
    depends_on:
      - mongo_configSrv
    links:
      - mongo_shard2_2
      - mongo_shard2_3
    command:
      [
        "--shardsvr", 
        "--replSet",
        "rs_mongo_shard2", 
        "--bind_ip_all", 
        "--port",
        "27019"
      ]
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')", "--quiet" ]
      interval: 5s
      start_period: 0s
  
  # 2-й шард, 2-ая реплика
  mongo_shard2_2:
    image: mongo:latest
    container_name: mongo_shard2_2
    restart: always
    ports:
      - "27023:27023"
    volumes:
      - mongo_shard2_2-data:/data/db
    depends_on:
      - mongo_configSrv
    command:
      [
        "--shardsvr", 
        "--replSet",
        "rs_mongo_shard2", 
        "--bind_ip_all", 
        "--port",
        "27023"
      ]
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')", "--quiet" ]
      interval: 5s
      start_period: 0s
      
  # 2-й шард, 3-ая реплика
  mongo_shard2_3:
    image: mongo:latest
    container_name: mongo_shard2_3
    restart: always
    ports:
      - "27024:27024"
    volumes:
      - mongo_shard2_3-data:/data/db
    depends_on:
      - mongo_configSrv
    command:
      [
        "--shardsvr", 
        "--replSet",
        "rs_mongo_shard2", 
        "--bind_ip_all", 
        "--port",
        "27024"
      ]
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')", "--quiet" ]
      interval: 5s
      start_period: 0s
  
  # роутер
  mongo_router:
    image: mongo:latest
    container_name: mongo_router
    restart: always
    ports:
      - "27020:27020"
    depends_on:
      - mongo_configSrv
      - mongo_shard1_1
      - mongo_shard1_2
      - mongo_shard1_3
      - mongo_shard2_1
      - mongo_shard2_2
      - mongo_shard2_3
    command:
      [
        "mongos", 
        "--configdb", 
        "mongo_configSrv/mongo_configSrv:27017",
        "--bind_ip_all",
        "--port",
        "27020"
      ]
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')", "--quiet" ]
      interval: 5s
      start_period: 0s
      
  pymongo_api:
    container_name: pymongo_api
    build: 
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    depends_on:
      - mongo_configSrv
      - mongo_shard1_1
      - mongo_shard1_2
      - mongo_shard1_3
      - mongo_shard2_1
      - mongo_shard2_2
      - mongo_shard2_3
      - mongo_router
    ports:
      - 8080:8080
    environment:
      MONGODB_URL: "mongodb://mongo_router:27020"
      MONGODB_DATABASE_NAME: "somedb"

volumes:
  mongo_config-data:
  mongo_shard1_1-data:
  mongo_shard1_2-data:
  mongo_shard1_3-data:
  mongo_shard2_1-data:
  mongo_shard2_2-data:
  mongo_shard2_3-data: